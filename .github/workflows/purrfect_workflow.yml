name: purrfect workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    if: ${{ github.ref == 'refs/heads/nomigrations' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/purrfect_backend:latest
      # - name: Push frontend to Docker Hub
      #   uses: docker/build-push-action@v2 
      #   with:
      #     context: https://github.com/veterinary-salons/frontend
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/purrfect_frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        if: ${{ github.ref == 'refs/heads/nomigrations' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }} 
          script: |
            sudo docker pull maxjust1ce/purrfect_backend:latest
            sudo docker pull maxjust1ce/purrfect_frontend:latest
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose rm frontend
            sudo rm .env
            touch .env
            
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
            echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            echo EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} >> .env
            
            sudo docker-compose up -d
            
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose exec -T backend python manage.py migrate
